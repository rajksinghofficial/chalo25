- name: Setup PostgreSQL with Replication
  hosts: all
  become: yes
  vars:
    postgres_version: "13"
    max_connections: 200
    shared_buffers: "128MB"
    replica_user: "replicator"
    replica_password: "replica_password"
    replication_slot: "replica_slot"

  tasks:
    - name: Update APT package cache
      apt:
        update_cache: yes

    - name: Install PostgreSQL
      apt:
        name: "postgresql-{{ postgres_version }}"
        state: present
      notify: Restart PostgreSQL

    - name: Configure Primary PostgreSQL
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
        line: "{{ item }}"
        insertafter: EOF
      loop:
        - "max_connections = {{ max_connections }}"
        - "shared_buffers = {{ shared_buffers }}"
        - "wal_level = replica"
        - "archive_mode = on"
        - "archive_command = 'cp %p /var/lib/postgresql/archive/%f'"
        - "max_wal_senders = 3"
        - "wal_keep_size = 64MB"
        - "hot_standby = on"
      notify: Restart PostgreSQL

    - name: Allow replication connections
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
        line: "host replication {{ replica_user }} 127.0.0.1/32 md5"
      notify: Restart PostgreSQL

    - name: Create replication user
      postgresql_user:
        name: "{{ replica_user }}"
        password: "{{ replica_password }}"
        role_attr_flags: "REPLICATION"
      become_user: postgres
      become: yes 
      become_flags: "-i"  

    - name: Create replication slot
      postgresql_query:
        query: "SELECT * FROM pg_create_physical_replication_slot('{{ replication_slot }}');"
          #become: yes
          #become_flags: "-i"  
      become_user: postgres
      ignore_errors: yes

    - name: Stop PostgreSQL to prepare Replica
      systemd:
        name: postgresql
        state: stopped

    - name: Backup Primary Database for Replica
      command: "pg_basebackup -D /var/lib/postgresql/{{ postgres_version }}/replica -Fp -Xs -R -P -h 127.0.0.1 -U {{ replica_user }}"
      become_user: postgres
      environment:
        PGPASSWORD: "{{ replica_password }}"

    - name: Start PostgreSQL
      systemd:
        name: postgresql
        state: started

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted

